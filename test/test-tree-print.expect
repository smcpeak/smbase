---- stdout ----
TPSequence of 2 elements, length=13 ind=0 consistent=false:
  TPSequence of 3 elements, length=13 ind=2 consistent=false:
    TPString: "hello," len=6
    TPBreak: BK_NEWLINE_OR_SPACE len=7
    TPString: "world!" len=6
  TPBreak: BK_NEWLINE_ALWAYS len=0
|------------------| margin=20
hello, world!
|--------| margin=10
hello,
  world!
|----------------------------| margin=30
var x: integer, y: char;
begin x := 1; y := 'a'; end
|------------------| margin=20
var x: integer,
  y: char;
begin x := 1;
  y := 'a'; end
|--------| margin=10
var
  x: integer,
  y: char;
begin
  x := 1;
  y := 'a';
end
|----------------------------| margin=30
f(a, b, c, d) + g(a, b, c, d)
|-----------------------| margin=25
f(a, b, c, d) +
  g(a, b, c, d)
|------------------| margin=20
f(a, b, c, d) +
  g(a, b, c, d)
|--------| margin=10
f(a, b, c,
  d) +
  g(a, b,
    c, d)
|------| margin=8
f(a, b,
  c, d)
  +
  g(a,
    b,
    c,
    d)
|--------| margin=10
x=3, c='x'
|---| margin=5
x=3,
c='x'
hi
hi
|----------| margin=12
cases 1:...
      2:...
      3:...
|----------------------------| margin=30
begin
  x := f(x);
  y := f(y);
  z := f(z);
  w := f(w);
  end;
|----------------------------| margin=30
begin x := f(x); y := f(y);
  z := f(z); w := f(w); end;
|------------------| margin=20
locals x,
       y,
       z,
       w,
       a,
       b,
       c,
       d;
|------------------| margin=20
locals x, y, z, w,
       a, b, c, d;
|------------------| margin=20
int f()
{
  int x;
  x = 8;
label:
  x++;
  goto label;
}
|------------------| margin=20
int f()
{
  return 0;
}
|----------------------------------------------------------------------| margin=72
void f()
{
  av_oo_pointer_t __ptr_to_p;
  printf("**pp=%d pp=%s\n",
    *((int *)av_oo_ptr_check(
               *((av_oo_pointer_t *)av_oo_ptr_check(pp, 16)), 4)),
    av_oo_ptr_cmp_eq(pp, __ptr_to_p)?
      "&p" :
      (av_oo_ptr_cmp_eq(pp, __ptr_to_q)? "&q" : "?"));
}
|--------------------------------------| margin=40
void f()
{
  av_oo_pointer_t __ptr_to_p;
  printf("**pp=%d pp=%s\n",
    *((int *)av_oo_ptr_check(
               *((av_oo_pointer_t *)av_oo_ptr_check(pp,
                                      16)),
               4)),
    av_oo_ptr_cmp_eq(pp, __ptr_to_p)?
      "&p" :
      (av_oo_ptr_cmp_eq(pp, __ptr_to_q)?
         "&q" :
         "?"));
}
|------------------| margin=20
int arr[] = {
  1,
  2,
  3,
  4
};
|------------------| margin=20
int arr[] = {
  1,
  2,
  3,
  4
};
|------------------| margin=20
int arr[] = { 1, 2,
  3, 4 };
|------------------| margin=20
int arr[] = {
  1,
  2,
  3,
  4
};
|------------------------------------------------| margin=50
int arr[] = { 1, 1, 1, { 1, 1, 1 }, 1, 1, 1, 1 };
|--------------------------------------| margin=40
int arr[] = {
  1, 1, 1, { 1, 1, 1 }, 1, 1, 1, 1
};
|----------------------------| margin=30
int arr[] = {
  1, 1, 1, { 1, 1, 1 }, 1, 1,
  1, 1
};
|------------------| margin=20
int arr[] = {
  1, 1, 1,
  { 1, 1, 1 }, 1, 1,
  1, 1
};
|--------| margin=10
int arr[] = {
  1, 1, 1,
  { 1, 1,
    1 },
  1, 1, 1,
  1
};
|--------------------------------------| margin=40
class C {
  C()
  {}
};
---- stderr ----
---- exit status ----
Exit 0
